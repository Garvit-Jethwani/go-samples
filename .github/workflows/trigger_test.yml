name: Generate test using RoostGPT

on:
  pull_request:

env:
  ROOST_TOKEN: ${{ secrets.ROOST_TOKEN }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  VERTEX_BEARER_TOKEN: ${{ secrets.VERTEX_BEARER_TOKEN }}
  AZURE_OPENAI_KEY: ${{ secrets.AZURE_OPENAI_KEY }}
  JIRA_TOKEN: ${{ secrets.JIRA_TOKEN }}
  AZURE_TOKEN: ${{ secrets.AZURE_TOKEN }}
  LOG_ELASTICSEARCH_TOKEN: ${{ secrets.LOG_ELASTICSEARCH_TOKEN }}
  LOG_ELASTICSEARCH_API_KEY: ${{ secrets.LOG_ELASTICSEARCH_API_KEY }}
  CLAUDE_AI_API_KEY: ${{ secrets.CLAUDE_AI_API_KEY }}
  DBRX_AUTH_TOKEN: ${{ secrets.DBRX_AUTH_TOKEN }}

jobs:
  build-and-run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Log in to Docker Hub
        env:
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        run: echo "${DOCKERHUB_TOKEN}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin

      - name: Pull specific Docker image
        run: docker pull zbio/roostgpt-cli:4d820683822923a29fa7902fdff30dff461b9f46

      - name: Set permissions for workspace
        run: |
          sudo chown -R 1000:1000 ${{ github.workspace }}
          sudo chmod -R 777 ${{ github.workspace }}

      - name: Run the container
        run: |
          docker run --rm \
            -v "${{ github.workspace }}:/workspaces" \
            -v "${{ github.workspace }}/config:/roost/config" \
            -e ROOST_TOKEN="${{ secrets.ROOST_TOKEN }}" \
            -e OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
            -e GITHUB_TOKEN="${{ secrets.GITHUB_TOKEN }}" \
            -e VERTEX_BEARER_TOKEN="${{ secrets.VERTEX_BEARER_TOKEN }}" \
            -e AZURE_OPENAI_KEY="${{ secrets.AZURE_OPENAI_KEY }}" \
            -e JIRA_TOKEN="${{ secrets.JIRA_TOKEN }}" \
            -e AZURE_TOKEN="${{ secrets.AZURE_TOKEN }}" \
            -e LOG_ELASTICSEARCH_TOKEN="${{ secrets.LOG_ELASTICSEARCH_TOKEN }}" \
            -e LOG_ELASTICSEARCH_API_KEY="${{ secrets.LOG_ELASTICSEARCH_API_KEY }}" \
            -e CLAUDE_AI_API_KEY="${{ secrets.CLAUDE_AI_API_KEY }}" \
            -e DBRX_AUTH_TOKEN="${{ secrets.DBRX_AUTH_TOKEN }}" \
            zbio/roostgpt-cli:4d820683822923a29fa7902fdff30dff461b9f46

      - name: Debug - List workspace contents
        run: |
          echo "Workspace contents:"
          ls -R ${{ github.workspace }}

      - name: Debug - Check for new or modified files
        run: |
          echo "New or modified files:"
          git status --porcelain

      - name: Commit and push changes
        run: |
          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Fetch all branches
          git fetch origin
          
          # Get the current branch name
          BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
          if [ "$BRANCH_NAME" = "HEAD" ]; then
            # We're in detached HEAD state, so let's get the PR branch name
            BRANCH_NAME=${GITHUB_HEAD_REF}
          fi
          
          # Check if there are any changes
          if [ -n "$(git status --porcelain)" ]; then
            # Add all changes
            git add -A
            
            # Commit changes
            git commit -m "Add generated test files"
            
            # Push changes
            git push origin HEAD:${BRANCH_NAME}
          else
            echo "No changes to commit"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
